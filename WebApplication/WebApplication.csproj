<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net5.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <SpaRoot>ClientApp\</SpaRoot>
    <DockerComposeProjectPath>../docker-compose.dcproj</DockerComposeProjectPath>
    <UserSecretsId>641ae9a3-016d-46d9-b30a-8d9d22b926f8</UserSecretsId>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="5.0.9" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="5.0.10" />
    <PackageReference Include="FirebaseAdmin" Version="2.2.0" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Models\" />
    <Folder Include="Models\Users\" />
    <Folder Include="Core\" />
    <Folder Include="Core\Filters\" />
    <Folder Include="Models\Notifications\" />
    <Folder Include="Models\Blacklist\" />
  </ItemGroup>
  
  <ItemGroup>
    <None Remove="Models\Users\" />
    <None Remove="FirebaseAdmin" />
    <None Remove="Models\.DS_Store" />
    <None Remove="Core\" />
    <None Remove="Core\Filters\" />
    <None Remove="Models\Notifications\" />
    <None Remove="Models\Blacklist\" />
  </ItemGroup>
<Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles-&gt;'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
